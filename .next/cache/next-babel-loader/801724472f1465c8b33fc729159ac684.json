{"ast":null,"code":"var _jsxFileName = \"/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport { DateUtils } from 'react-day-picker';\nimport { useState } from 'react';\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), {\n    locale\n  });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) => dateFnsFormat(date, format, {\n  locale\n});\n\nconst format = 'dd MMM yyyy';\nconst today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1);\n\nconst numberOfNightsBetweenDates = (startDate, endDate) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  let dayCount = 0;\n\n  while (end > start) {\n    dayCount++;\n    start.setDate(start.getDate() + 1);\n  }\n\n  return dayCount;\n};\n\nexport default (({\n  datesChanged\n}) => {\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(new Date());\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState(new Date());\n  return __jsx(\"div\", {\n    className: \"jsx-2233285091\" + \" \" + 'date-range-picker-container',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"From:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    placeholder: `${dateFnsFormat(new Date(), format)}`,\n    dayPickerProps: {\n      modifiers: {\n        disabled: {\n          before: new Date()\n        }\n      }\n    },\n    onDayChange: day => {\n      setStartDate(day);\n      const newEndDate = new Date(day);\n\n      if (numberOfNightsBetweenDates(day, endDate) < 1) {\n        newEndDate.setDate(newEndDate.getDate() + 1);\n        setEndDate(newEndDate);\n      }\n\n      datesChanged(day, newEndDate);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"To:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    placeholder: `${dateFnsFormat(new Date(), format)}`,\n    dayPickerProps: {\n      modifiers: {\n        disabled: [startDate, {\n          before: startDate\n        }]\n      }\n    },\n    onDayChange: day => {\n      setEndDate(day);\n      datesChanged(startDate, day);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1123662568\",\n    __self: this\n  }, \".date-range-picker-container.jsx-2233285091 div.jsx-2233285091{display:grid;border:1px solid #ddd;grid-template-columns:30% 70%;padding:10px;}label.jsx-2233285091{padding-top:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iZW5ueXdhbmcvRG9jdW1lbnRzL1Byb2plY3RzL2dhbWVkbmQvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0ZrQixBQUd3QixBQU1JLGFBTEssSUFNeEIsa0JBTGdDLDhCQUNqQixhQUNmIiwiZmlsZSI6Ii9Vc2Vycy9iZW5ueXdhbmcvRG9jdW1lbnRzL1Byb2plY3RzL2dhbWVkbmQvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF5UGlja2VySW5wdXQgZnJvbSAncmVhY3QtZGF5LXBpY2tlci9EYXlQaWNrZXJJbnB1dCc7XG5pbXBvcnQgJ3JlYWN0LWRheS1waWNrZXIvbGliL3N0eWxlLmNzcyc7XG5pbXBvcnQgZGF0ZUZuc0Zvcm1hdCBmcm9tICdkYXRlLWZucy9mb3JtYXQnO1xuaW1wb3J0IGRhdGVGbnNQYXJzZSBmcm9tICdkYXRlLWZucy9wYXJzZSc7XG5pbXBvcnQgeyBEYXRlVXRpbHMgfSBmcm9tICdyZWFjdC1kYXktcGlja2VyJztcbmltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBwYXJzZURhdGUgPSAoc3RyLCBmb3JtYXQsIGxvY2FsZSkgPT4ge1xuICBjb25zdCBwYXJzZWQgPSBkYXRlRm5zUGFyc2Uoc3RyLCBmb3JtYXQsIG5ldyBEYXRlKCksIHsgbG9jYWxlIH0pO1xuICByZXR1cm4gRGF0ZVV0aWxzLmlzRGF0ZShwYXJzZWQpID8gcGFyc2VkIDogbnVsbDtcbn07XG5cbmNvbnN0IGZvcm1hdERhdGUgPSAoZGF0ZSwgZm9ybWF0LCBsb2NhbGUpID0+XG4gIGRhdGVGbnNGb3JtYXQoZGF0ZSwgZm9ybWF0LCB7IGxvY2FsZSB9KTtcblxuY29uc3QgZm9ybWF0ID0gJ2RkIE1NTSB5eXl5JztcblxuY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuY29uc3QgdG9tb3Jyb3cgPSBuZXcgRGF0ZSh0b2RheSk7XG50b21vcnJvdy5zZXREYXRlKHRvbW9ycm93LmdldERhdGUoKSArIDEpO1xuXG5jb25zdCBudW1iZXJPZk5pZ2h0c0JldHdlZW5EYXRlcyA9IChzdGFydERhdGUsIGVuZERhdGUpID0+IHtcbiAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZShzdGFydERhdGUpO1xuICBjb25zdCBlbmQgPSBuZXcgRGF0ZShlbmREYXRlKTtcbiAgbGV0IGRheUNvdW50ID0gMDtcblxuICB3aGlsZSAoZW5kID4gc3RhcnQpIHtcbiAgICBkYXlDb3VudCsrO1xuICAgIHN0YXJ0LnNldERhdGUoc3RhcnQuZ2V0RGF0ZSgpICsgMSk7XG4gIH1cbiAgcmV0dXJuIGRheUNvdW50O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgKHsgZGF0ZXNDaGFuZ2VkIH0pID0+IHtcbiAgY29uc3QgW3N0YXJ0RGF0ZSwgc2V0U3RhcnREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKCkpO1xuICBjb25zdCBbZW5kRGF0ZSwgc2V0RW5kRGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgpKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdkYXRlLXJhbmdlLXBpY2tlci1jb250YWluZXInPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsPkZyb206PC9sYWJlbD5cbiAgICAgICAgPERheVBpY2tlcklucHV0XG4gICAgICAgICAgZm9ybWF0RGF0ZT17Zm9ybWF0RGF0ZX1cbiAgICAgICAgICBmb3JtYXQ9e2Zvcm1hdH1cbiAgICAgICAgICBwYXJzZURhdGU9e3BhcnNlRGF0ZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17YCR7ZGF0ZUZuc0Zvcm1hdChuZXcgRGF0ZSgpLCBmb3JtYXQpfWB9XG4gICAgICAgICAgZGF5UGlja2VyUHJvcHM9e3tcbiAgICAgICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgICAgICBkaXNhYmxlZDoge1xuICAgICAgICAgICAgICAgIGJlZm9yZTogbmV3IERhdGUoKSxcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkRheUNoYW5nZT17ZGF5ID0+IHtcbiAgICAgICAgICAgIHNldFN0YXJ0RGF0ZShkYXkpO1xuICAgICAgICAgICAgY29uc3QgbmV3RW5kRGF0ZSA9IG5ldyBEYXRlKGRheSk7XG4gICAgICAgICAgICBpZiAobnVtYmVyT2ZOaWdodHNCZXR3ZWVuRGF0ZXMoZGF5LCBlbmREYXRlKSA8IDEpIHtcbiAgICAgICAgICAgICAgbmV3RW5kRGF0ZS5zZXREYXRlKG5ld0VuZERhdGUuZ2V0RGF0ZSgpICsgMSk7XG4gICAgICAgICAgICAgIHNldEVuZERhdGUobmV3RW5kRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRlc0NoYW5nZWQoZGF5LCBuZXdFbmREYXRlKTtcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWw+VG86PC9sYWJlbD5cbiAgICAgICAgPERheVBpY2tlcklucHV0XG4gICAgICAgICAgZm9ybWF0RGF0ZT17Zm9ybWF0RGF0ZX1cbiAgICAgICAgICBmb3JtYXQ9e2Zvcm1hdH1cbiAgICAgICAgICBwYXJzZURhdGU9e3BhcnNlRGF0ZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17YCR7ZGF0ZUZuc0Zvcm1hdChuZXcgRGF0ZSgpLCBmb3JtYXQpfWB9XG4gICAgICAgICAgZGF5UGlja2VyUHJvcHM9e3tcbiAgICAgICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgICAgICBkaXNhYmxlZDogW1xuICAgICAgICAgICAgICAgIHN0YXJ0RGF0ZSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBiZWZvcmU6IHN0YXJ0RGF0ZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0RW5kRGF0ZShkYXkpO1xuICAgICAgICAgICAgZGF0ZXNDaGFuZ2VkKHN0YXJ0RGF0ZSwgZGF5KTtcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmRhdGUtcmFuZ2UtcGlja2VyLWNvbnRhaW5lciBkaXYge1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMwJSA3MCU7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgfVxuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIC5EYXlQaWNrZXJJbnB1dCBpbnB1dCB7XG4gICAgICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */\\n/*@ sourceURL=/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js */\"), __jsx(_JSXStyle, {\n    id: \"2975770914\",\n    __self: this\n  }, \".DayPickerInput input{width:120px;padding:10px;font-size:16px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iZW5ueXdhbmcvRG9jdW1lbnRzL1Byb2plY3RzL2dhbWVkbmQvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUd5QixBQUd1QixZQUNDLGFBQ0UsZUFDakIiLCJmaWxlIjoiL1VzZXJzL2Jlbm55d2FuZy9Eb2N1bWVudHMvUHJvamVjdHMvZ2FtZWRuZC9jb21wb25lbnRzL0RhdGVSYW5nZVBpY2tlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEYXlQaWNrZXJJbnB1dCBmcm9tICdyZWFjdC1kYXktcGlja2VyL0RheVBpY2tlcklucHV0JztcbmltcG9ydCAncmVhY3QtZGF5LXBpY2tlci9saWIvc3R5bGUuY3NzJztcbmltcG9ydCBkYXRlRm5zRm9ybWF0IGZyb20gJ2RhdGUtZm5zL2Zvcm1hdCc7XG5pbXBvcnQgZGF0ZUZuc1BhcnNlIGZyb20gJ2RhdGUtZm5zL3BhcnNlJztcbmltcG9ydCB7IERhdGVVdGlscyB9IGZyb20gJ3JlYWN0LWRheS1waWNrZXInO1xuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IHBhcnNlRGF0ZSA9IChzdHIsIGZvcm1hdCwgbG9jYWxlKSA9PiB7XG4gIGNvbnN0IHBhcnNlZCA9IGRhdGVGbnNQYXJzZShzdHIsIGZvcm1hdCwgbmV3IERhdGUoKSwgeyBsb2NhbGUgfSk7XG4gIHJldHVybiBEYXRlVXRpbHMuaXNEYXRlKHBhcnNlZCkgPyBwYXJzZWQgOiBudWxsO1xufTtcblxuY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlLCBmb3JtYXQsIGxvY2FsZSkgPT5cbiAgZGF0ZUZuc0Zvcm1hdChkYXRlLCBmb3JtYXQsIHsgbG9jYWxlIH0pO1xuXG5jb25zdCBmb3JtYXQgPSAnZGQgTU1NIHl5eXknO1xuXG5jb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG5jb25zdCB0b21vcnJvdyA9IG5ldyBEYXRlKHRvZGF5KTtcbnRvbW9ycm93LnNldERhdGUodG9tb3Jyb3cuZ2V0RGF0ZSgpICsgMSk7XG5cbmNvbnN0IG51bWJlck9mTmlnaHRzQmV0d2VlbkRhdGVzID0gKHN0YXJ0RGF0ZSwgZW5kRGF0ZSkgPT4ge1xuICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKHN0YXJ0RGF0ZSk7XG4gIGNvbnN0IGVuZCA9IG5ldyBEYXRlKGVuZERhdGUpO1xuICBsZXQgZGF5Q291bnQgPSAwO1xuXG4gIHdoaWxlIChlbmQgPiBzdGFydCkge1xuICAgIGRheUNvdW50Kys7XG4gICAgc3RhcnQuc2V0RGF0ZShzdGFydC5nZXREYXRlKCkgKyAxKTtcbiAgfVxuICByZXR1cm4gZGF5Q291bnQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoeyBkYXRlc0NoYW5nZWQgfSkgPT4ge1xuICBjb25zdCBbc3RhcnREYXRlLCBzZXRTdGFydERhdGVdID0gdXNlU3RhdGUobmV3IERhdGUoKSk7XG4gIGNvbnN0IFtlbmREYXRlLCBzZXRFbmREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKCkpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9J2RhdGUtcmFuZ2UtcGlja2VyLWNvbnRhaW5lcic+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWw+RnJvbTo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHBhcnNlRGF0ZT17cGFyc2VEYXRlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtgJHtkYXRlRm5zRm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiB7XG4gICAgICAgICAgICAgICAgYmVmb3JlOiBuZXcgRGF0ZSgpLFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0U3RhcnREYXRlKGRheSk7XG4gICAgICAgICAgICBjb25zdCBuZXdFbmREYXRlID0gbmV3IERhdGUoZGF5KTtcbiAgICAgICAgICAgIGlmIChudW1iZXJPZk5pZ2h0c0JldHdlZW5EYXRlcyhkYXksIGVuZERhdGUpIDwgMSkge1xuICAgICAgICAgICAgICBuZXdFbmREYXRlLnNldERhdGUobmV3RW5kRGF0ZS5nZXREYXRlKCkgKyAxKTtcbiAgICAgICAgICAgICAgc2V0RW5kRGF0ZShuZXdFbmREYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGVzQ2hhbmdlZChkYXksIG5ld0VuZERhdGUpO1xuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbD5Ubzo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHBhcnNlRGF0ZT17cGFyc2VEYXRlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtgJHtkYXRlRm5zRm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiBbXG4gICAgICAgICAgICAgICAgc3RhcnREYXRlLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGJlZm9yZTogc3RhcnREYXRlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIH19XG4gICAgICAgICAgb25EYXlDaGFuZ2U9e2RheSA9PiB7XG4gICAgICAgICAgICBzZXRFbmREYXRlKGRheSk7XG4gICAgICAgICAgICBkYXRlc0NoYW5nZWQoc3RhcnREYXRlLCBkYXkpO1xuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuZGF0ZS1yYW5nZS1waWNrZXItY29udGFpbmVyIGRpdiB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzAlIDcwJTtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgLkRheVBpY2tlcklucHV0IGlucHV0IHtcbiAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXX0= */\\n/*@ sourceURL=/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js */\"));\n});","map":{"version":3,"sources":["/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js"],"names":["DayPickerInput","dateFnsFormat","dateFnsParse","DateUtils","useState","parseDate","str","format","locale","parsed","Date","isDate","formatDate","date","today","tomorrow","setDate","getDate","numberOfNightsBetweenDates","startDate","endDate","start","end","dayCount","datesChanged","setStartDate","setEndDate","modifiers","disabled","before","day","newEndDate"],"mappings":"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","sourcesContent":["import DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport { DateUtils } from 'react-day-picker';\nimport { useState } from 'react';\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale });\n\nconst format = 'dd MMM yyyy';\n\nconst today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1);\n\nconst numberOfNightsBetweenDates = (startDate, endDate) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  let dayCount = 0;\n\n  while (end > start) {\n    dayCount++;\n    start.setDate(start.getDate() + 1);\n  }\n  return dayCount;\n};\n\nexport default ({ datesChanged }) => {\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  return (\n    <div className='date-range-picker-container'>\n      <div>\n        <label>From:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: {\n                before: new Date(),\n              },\n            },\n          }}\n          onDayChange={day => {\n            setStartDate(day);\n            const newEndDate = new Date(day);\n            if (numberOfNightsBetweenDates(day, endDate) < 1) {\n              newEndDate.setDate(newEndDate.getDate() + 1);\n              setEndDate(newEndDate);\n            }\n            datesChanged(day, newEndDate);\n          }}\n        />\n      </div>\n      <div>\n        <label>To:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                startDate,\n                {\n                  before: startDate,\n                },\n              ],\n            },\n          }}\n          onDayChange={day => {\n            setEndDate(day);\n            datesChanged(startDate, day);\n          }}\n        />\n      </div>\n\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}