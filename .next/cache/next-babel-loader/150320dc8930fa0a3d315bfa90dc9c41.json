{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport { DateUtils } from 'react-day-picker';\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), {\n    locale\n  });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) => dateFnsFormat(date, format, {\n  locale\n});\n\nconst format = 'dd MMM yyyy';\nconst today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1);\n\nconst numberOfNightsBetweenDates = (startDate, endDate) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  let dayCount = 0;\n\n  while (end > start) {\n    dayCount++;\n    start.setDate(start.getDate() + 1);\n  }\n\n  return dayCount;\n};\n\nexport default (({\n  datesChanged,\n  bookedDates\n}) => {\n  const {\n    0: startDate,\n    1: setStartDate\n  } = useState(today);\n  const {\n    0: endDate,\n    1: setEndDate\n  } = useState(tomorrow);\n\n  if (bookedDates) {\n    bookedDates = bookedDates.map(date => {\n      return new Date(date);\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: \"jsx-2233285091\" + \" \" + 'date-range-picker-container'\n  }, __jsx(\"div\", {\n    className: \"jsx-2233285091\"\n  }, __jsx(\"label\", {\n    className: \"jsx-2233285091\"\n  }, \"From:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    placeholder: `${dateFnsFormat(new Date(), format)}`,\n    dayPickerProps: {\n      modifiers: {\n        disabled: [...bookedDates, {\n          before: new Date()\n        }]\n      }\n    },\n    onDayChange: day => {\n      setStartDate(day);\n      const newEndDate = new Date(day);\n\n      if (numberOfNightsBetweenDates(day, endDate) < 1) {\n        newEndDate.setDate(newEndDate.getDate() + 1);\n        setEndDate(newEndDate);\n      }\n\n      datesChanged(day, newEndDate);\n    }\n  })), __jsx(\"div\", {\n    className: \"jsx-2233285091\"\n  }, __jsx(\"label\", {\n    className: \"jsx-2233285091\"\n  }, \"To:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    placeholder: `${dateFnsFormat(new Date(), format)}`,\n    dayPickerProps: {\n      modifiers: {\n        disabled: [startDate, ...bookedDates, {\n          before: startDate\n        }]\n      }\n    },\n    onDayChange: day => {\n      setEndDate(day);\n      datesChanged(startDate, day);\n    }\n  })), __jsx(_JSXStyle, {\n    id: \"1123662568\"\n  }, \".date-range-picker-container.jsx-2233285091 div.jsx-2233285091{display:grid;border:1px solid #ddd;grid-template-columns:30% 70%;padding:10px;}label.jsx-2233285091{padding-top:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iZW5ueXdhbmcvRG9jdW1lbnRzL1Byb2plY3RzL2dhbWVkbmQvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUdrQixBQUd3QixBQU1JLGFBTEssSUFNeEIsa0JBTGdDLDhCQUNqQixhQUNmIiwiZmlsZSI6Ii9Vc2Vycy9iZW5ueXdhbmcvRG9jdW1lbnRzL1Byb2plY3RzL2dhbWVkbmQvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBEYXlQaWNrZXJJbnB1dCBmcm9tICdyZWFjdC1kYXktcGlja2VyL0RheVBpY2tlcklucHV0JztcbmltcG9ydCAncmVhY3QtZGF5LXBpY2tlci9saWIvc3R5bGUuY3NzJztcbmltcG9ydCB7IERhdGVVdGlscyB9IGZyb20gJ3JlYWN0LWRheS1waWNrZXInO1xuXG5pbXBvcnQgZGF0ZUZuc0Zvcm1hdCBmcm9tICdkYXRlLWZucy9mb3JtYXQnO1xuaW1wb3J0IGRhdGVGbnNQYXJzZSBmcm9tICdkYXRlLWZucy9wYXJzZSc7XG5cbmNvbnN0IHBhcnNlRGF0ZSA9IChzdHIsIGZvcm1hdCwgbG9jYWxlKSA9PiB7XG4gIGNvbnN0IHBhcnNlZCA9IGRhdGVGbnNQYXJzZShzdHIsIGZvcm1hdCwgbmV3IERhdGUoKSwgeyBsb2NhbGUgfSk7XG4gIHJldHVybiBEYXRlVXRpbHMuaXNEYXRlKHBhcnNlZCkgPyBwYXJzZWQgOiBudWxsO1xufTtcblxuY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlLCBmb3JtYXQsIGxvY2FsZSkgPT5cbiAgZGF0ZUZuc0Zvcm1hdChkYXRlLCBmb3JtYXQsIHsgbG9jYWxlIH0pO1xuXG5jb25zdCBmb3JtYXQgPSAnZGQgTU1NIHl5eXknO1xuXG5jb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG5jb25zdCB0b21vcnJvdyA9IG5ldyBEYXRlKHRvZGF5KTtcbnRvbW9ycm93LnNldERhdGUodG9tb3Jyb3cuZ2V0RGF0ZSgpICsgMSk7XG5cbmNvbnN0IG51bWJlck9mTmlnaHRzQmV0d2VlbkRhdGVzID0gKHN0YXJ0RGF0ZSwgZW5kRGF0ZSkgPT4ge1xuICBjb25zdCBzdGFydCA9IG5ldyBEYXRlKHN0YXJ0RGF0ZSk7XG4gIGNvbnN0IGVuZCA9IG5ldyBEYXRlKGVuZERhdGUpO1xuICBsZXQgZGF5Q291bnQgPSAwO1xuXG4gIHdoaWxlIChlbmQgPiBzdGFydCkge1xuICAgIGRheUNvdW50Kys7XG4gICAgc3RhcnQuc2V0RGF0ZShzdGFydC5nZXREYXRlKCkgKyAxKTtcbiAgfVxuICByZXR1cm4gZGF5Q291bnQ7XG59O1xuXG5leHBvcnQgZGVmYXVsdCAoeyBkYXRlc0NoYW5nZWQsIGJvb2tlZERhdGVzIH0pID0+IHtcbiAgY29uc3QgW3N0YXJ0RGF0ZSwgc2V0U3RhcnREYXRlXSA9IHVzZVN0YXRlKHRvZGF5KTtcbiAgY29uc3QgW2VuZERhdGUsIHNldEVuZERhdGVdID0gdXNlU3RhdGUodG9tb3Jyb3cpO1xuXG4gIGlmIChib29rZWREYXRlcykge1xuICAgIGJvb2tlZERhdGVzID0gYm9va2VkRGF0ZXMubWFwKGRhdGUgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKGRhdGUpO1xuICAgIH0pO1xuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT0nZGF0ZS1yYW5nZS1waWNrZXItY29udGFpbmVyJz5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbD5Gcm9tOjwvbGFiZWw+XG4gICAgICAgIDxEYXlQaWNrZXJJbnB1dFxuICAgICAgICAgIGZvcm1hdERhdGU9e2Zvcm1hdERhdGV9XG4gICAgICAgICAgZm9ybWF0PXtmb3JtYXR9XG4gICAgICAgICAgcGFyc2VEYXRlPXtwYXJzZURhdGV9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e2Ake2RhdGVGbnNGb3JtYXQobmV3IERhdGUoKSwgZm9ybWF0KX1gfVxuICAgICAgICAgIGRheVBpY2tlclByb3BzPXt7XG4gICAgICAgICAgICBtb2RpZmllcnM6IHtcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IFtcbiAgICAgICAgICAgICAgICAuLi5ib29rZWREYXRlcyxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICBiZWZvcmU6IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0U3RhcnREYXRlKGRheSk7XG4gICAgICAgICAgICBjb25zdCBuZXdFbmREYXRlID0gbmV3IERhdGUoZGF5KTtcbiAgICAgICAgICAgIGlmIChudW1iZXJPZk5pZ2h0c0JldHdlZW5EYXRlcyhkYXksIGVuZERhdGUpIDwgMSkge1xuICAgICAgICAgICAgICBuZXdFbmREYXRlLnNldERhdGUobmV3RW5kRGF0ZS5nZXREYXRlKCkgKyAxKTtcbiAgICAgICAgICAgICAgc2V0RW5kRGF0ZShuZXdFbmREYXRlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRhdGVzQ2hhbmdlZChkYXksIG5ld0VuZERhdGUpO1xuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbD5Ubzo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHBhcnNlRGF0ZT17cGFyc2VEYXRlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtgJHtkYXRlRm5zRm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiBbXG4gICAgICAgICAgICAgICAgc3RhcnREYXRlLFxuICAgICAgICAgICAgICAgIC4uLmJvb2tlZERhdGVzLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGJlZm9yZTogc3RhcnREYXRlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkRheUNoYW5nZT17ZGF5ID0+IHtcbiAgICAgICAgICAgIHNldEVuZERhdGUoZGF5KTtcbiAgICAgICAgICAgIGRhdGVzQ2hhbmdlZChzdGFydERhdGUsIGRheSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8c3R5bGUganN4PntgXG4gICAgICAgIC5kYXRlLXJhbmdlLXBpY2tlci1jb250YWluZXIgZGl2IHtcbiAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7XG4gICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAzMCUgNzAlO1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgICAgbGFiZWwge1xuICAgICAgICAgIHBhZGRpbmctdG9wOiAxMHB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAuRGF5UGlja2VySW5wdXQgaW5wdXQge1xuICAgICAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdfQ== */\\n/*@ sourceURL=/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js */\"), __jsx(_JSXStyle, {\n    id: \"2975770914\"\n  }, \".DayPickerInput input{width:120px;padding:10px;font-size:16px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iZW5ueXdhbmcvRG9jdW1lbnRzL1Byb2plY3RzL2dhbWVkbmQvY29tcG9uZW50cy9EYXRlUmFuZ2VQaWNrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEd5QixBQUd1QixZQUNDLGFBQ0UsZUFDakIiLCJmaWxlIjoiL1VzZXJzL2Jlbm55d2FuZy9Eb2N1bWVudHMvUHJvamVjdHMvZ2FtZWRuZC9jb21wb25lbnRzL0RhdGVSYW5nZVBpY2tlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IERheVBpY2tlcklucHV0IGZyb20gJ3JlYWN0LWRheS1waWNrZXIvRGF5UGlja2VySW5wdXQnO1xuaW1wb3J0ICdyZWFjdC1kYXktcGlja2VyL2xpYi9zdHlsZS5jc3MnO1xuaW1wb3J0IHsgRGF0ZVV0aWxzIH0gZnJvbSAncmVhY3QtZGF5LXBpY2tlcic7XG5cbmltcG9ydCBkYXRlRm5zRm9ybWF0IGZyb20gJ2RhdGUtZm5zL2Zvcm1hdCc7XG5pbXBvcnQgZGF0ZUZuc1BhcnNlIGZyb20gJ2RhdGUtZm5zL3BhcnNlJztcblxuY29uc3QgcGFyc2VEYXRlID0gKHN0ciwgZm9ybWF0LCBsb2NhbGUpID0+IHtcbiAgY29uc3QgcGFyc2VkID0gZGF0ZUZuc1BhcnNlKHN0ciwgZm9ybWF0LCBuZXcgRGF0ZSgpLCB7IGxvY2FsZSB9KTtcbiAgcmV0dXJuIERhdGVVdGlscy5pc0RhdGUocGFyc2VkKSA/IHBhcnNlZCA6IG51bGw7XG59O1xuXG5jb25zdCBmb3JtYXREYXRlID0gKGRhdGUsIGZvcm1hdCwgbG9jYWxlKSA9PlxuICBkYXRlRm5zRm9ybWF0KGRhdGUsIGZvcm1hdCwgeyBsb2NhbGUgfSk7XG5cbmNvbnN0IGZvcm1hdCA9ICdkZCBNTU0geXl5eSc7XG5cbmNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcbmNvbnN0IHRvbW9ycm93ID0gbmV3IERhdGUodG9kYXkpO1xudG9tb3Jyb3cuc2V0RGF0ZSh0b21vcnJvdy5nZXREYXRlKCkgKyAxKTtcblxuY29uc3QgbnVtYmVyT2ZOaWdodHNCZXR3ZWVuRGF0ZXMgPSAoc3RhcnREYXRlLCBlbmREYXRlKSA9PiB7XG4gIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoc3RhcnREYXRlKTtcbiAgY29uc3QgZW5kID0gbmV3IERhdGUoZW5kRGF0ZSk7XG4gIGxldCBkYXlDb3VudCA9IDA7XG5cbiAgd2hpbGUgKGVuZCA+IHN0YXJ0KSB7XG4gICAgZGF5Q291bnQrKztcbiAgICBzdGFydC5zZXREYXRlKHN0YXJ0LmdldERhdGUoKSArIDEpO1xuICB9XG4gIHJldHVybiBkYXlDb3VudDtcbn07XG5cbmV4cG9ydCBkZWZhdWx0ICh7IGRhdGVzQ2hhbmdlZCwgYm9va2VkRGF0ZXMgfSkgPT4ge1xuICBjb25zdCBbc3RhcnREYXRlLCBzZXRTdGFydERhdGVdID0gdXNlU3RhdGUodG9kYXkpO1xuICBjb25zdCBbZW5kRGF0ZSwgc2V0RW5kRGF0ZV0gPSB1c2VTdGF0ZSh0b21vcnJvdyk7XG5cbiAgaWYgKGJvb2tlZERhdGVzKSB7XG4gICAgYm9va2VkRGF0ZXMgPSBib29rZWREYXRlcy5tYXAoZGF0ZSA9PiB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoZGF0ZSk7XG4gICAgfSk7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPSdkYXRlLXJhbmdlLXBpY2tlci1jb250YWluZXInPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsPkZyb206PC9sYWJlbD5cbiAgICAgICAgPERheVBpY2tlcklucHV0XG4gICAgICAgICAgZm9ybWF0RGF0ZT17Zm9ybWF0RGF0ZX1cbiAgICAgICAgICBmb3JtYXQ9e2Zvcm1hdH1cbiAgICAgICAgICBwYXJzZURhdGU9e3BhcnNlRGF0ZX1cbiAgICAgICAgICBwbGFjZWhvbGRlcj17YCR7ZGF0ZUZuc0Zvcm1hdChuZXcgRGF0ZSgpLCBmb3JtYXQpfWB9XG4gICAgICAgICAgZGF5UGlja2VyUHJvcHM9e3tcbiAgICAgICAgICAgIG1vZGlmaWVyczoge1xuICAgICAgICAgICAgICBkaXNhYmxlZDogW1xuICAgICAgICAgICAgICAgIC4uLmJvb2tlZERhdGVzLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGJlZm9yZTogbmV3IERhdGUoKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25EYXlDaGFuZ2U9e2RheSA9PiB7XG4gICAgICAgICAgICBzZXRTdGFydERhdGUoZGF5KTtcbiAgICAgICAgICAgIGNvbnN0IG5ld0VuZERhdGUgPSBuZXcgRGF0ZShkYXkpO1xuICAgICAgICAgICAgaWYgKG51bWJlck9mTmlnaHRzQmV0d2VlbkRhdGVzKGRheSwgZW5kRGF0ZSkgPCAxKSB7XG4gICAgICAgICAgICAgIG5ld0VuZERhdGUuc2V0RGF0ZShuZXdFbmREYXRlLmdldERhdGUoKSArIDEpO1xuICAgICAgICAgICAgICBzZXRFbmREYXRlKG5ld0VuZERhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0ZXNDaGFuZ2VkKGRheSwgbmV3RW5kRGF0ZSk7XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsPlRvOjwvbGFiZWw+XG4gICAgICAgIDxEYXlQaWNrZXJJbnB1dFxuICAgICAgICAgIGZvcm1hdERhdGU9e2Zvcm1hdERhdGV9XG4gICAgICAgICAgZm9ybWF0PXtmb3JtYXR9XG4gICAgICAgICAgcGFyc2VEYXRlPXtwYXJzZURhdGV9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e2Ake2RhdGVGbnNGb3JtYXQobmV3IERhdGUoKSwgZm9ybWF0KX1gfVxuICAgICAgICAgIGRheVBpY2tlclByb3BzPXt7XG4gICAgICAgICAgICBtb2RpZmllcnM6IHtcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IFtcbiAgICAgICAgICAgICAgICBzdGFydERhdGUsXG4gICAgICAgICAgICAgICAgLi4uYm9va2VkRGF0ZXMsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgYmVmb3JlOiBzdGFydERhdGVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0RW5kRGF0ZShkYXkpO1xuICAgICAgICAgICAgZGF0ZXNDaGFuZ2VkKHN0YXJ0RGF0ZSwgZGF5KTtcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmRhdGUtcmFuZ2UtcGlja2VyLWNvbnRhaW5lciBkaXYge1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMwJSA3MCU7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgfVxuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICAgIDxzdHlsZSBqc3ggZ2xvYmFsPntgXG4gICAgICAgIC5EYXlQaWNrZXJJbnB1dCBpbnB1dCB7XG4gICAgICAgICAgd2lkdGg6IDEyMHB4O1xuICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gICk7XG59O1xuIl19 */\\n/*@ sourceURL=/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js */\"));\n});","map":{"version":3,"sources":["/Users/bennywang/Documents/Projects/gamednd/components/DateRangePicker.js"],"names":["useState","DayPickerInput","DateUtils","dateFnsFormat","dateFnsParse","parseDate","str","format","locale","parsed","Date","isDate","formatDate","date","today","tomorrow","setDate","getDate","numberOfNightsBetweenDates","startDate","endDate","start","end","dayCount","datesChanged","bookedDates","setStartDate","setEndDate","map","modifiers","disabled","before","day","newEndDate"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\nimport { DateUtils } from 'react-day-picker';\n\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale });\n\nconst format = 'dd MMM yyyy';\n\nconst today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1);\n\nconst numberOfNightsBetweenDates = (startDate, endDate) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate);\n  let dayCount = 0;\n\n  while (end > start) {\n    dayCount++;\n    start.setDate(start.getDate() + 1);\n  }\n  return dayCount;\n};\n\nexport default ({ datesChanged, bookedDates }) => {\n  const [startDate, setStartDate] = useState(today);\n  const [endDate, setEndDate] = useState(tomorrow);\n\n  if (bookedDates) {\n    bookedDates = bookedDates.map(date => {\n      return new Date(date);\n    });\n  }\n\n  return (\n    <div className='date-range-picker-container'>\n      <div>\n        <label>From:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                ...bookedDates,\n                {\n                  before: new Date()\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setStartDate(day);\n            const newEndDate = new Date(day);\n            if (numberOfNightsBetweenDates(day, endDate) < 1) {\n              newEndDate.setDate(newEndDate.getDate() + 1);\n              setEndDate(newEndDate);\n            }\n            datesChanged(day, newEndDate);\n          }}\n        />\n      </div>\n      <div>\n        <label>To:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                startDate,\n                ...bookedDates,\n                {\n                  before: startDate\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setEndDate(day);\n            datesChanged(startDate, day);\n          }}\n        />\n      </div>\n\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}