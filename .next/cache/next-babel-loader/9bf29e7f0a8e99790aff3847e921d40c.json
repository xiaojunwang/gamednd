{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport { User } from '../../../model.js';\nexport default (async (req, res) => {\n  if (req.method !== 'POST') {\n    res.status(405).end(); //do not allow this method\n\n    return;\n  }\n\n  const {\n    email,\n    password,\n    passwordconfirmation\n  } = req.body;\n\n  try {\n    const user = await User.create({\n      email,\n      password\n    });\n    res.end(_JSON$stringify({\n      status: 'success',\n      message: 'User added'\n    }));\n  } catch (error) {\n    res.statusCode = 500;\n    let message = 'An error occured';\n\n    if (error.name === 'SequelizeUniqueConstraintError') {\n      message = 'User already exists';\n    }\n\n    res.end(_JSON$stringify({\n      status: 'error',\n      message\n    }));\n  }\n});","map":{"version":3,"sources":["/Users/bennywang/Documents/Projects/gamednd/pages/api/auth/register.js"],"names":["User","req","res","method","status","end","email","password","passwordconfirmation","body","user","create","message","error","statusCode","name"],"mappings":";AAAA,SAASA,IAAT,QAAqB,mBAArB;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzBD,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,GADyB,CACF;;AACvB;AACD;;AAED,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAA4CP,GAAG,CAACQ,IAAtD;;AAEA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACW,MAAL,CAAY;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAZ,CAAnB;AACAL,IAAAA,GAAG,CAACG,GAAJ,CAAQ,gBAAe;AAAED,MAAAA,MAAM,EAAE,SAAV;AAAqBQ,MAAAA,OAAO,EAAE;AAA9B,KAAf,CAAR;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdX,IAAAA,GAAG,CAACY,UAAJ,GAAiB,GAAjB;AACA,QAAIF,OAAO,GAAG,kBAAd;;AACA,QAAIC,KAAK,CAACE,IAAN,KAAe,gCAAnB,EAAqD;AACnDH,MAAAA,OAAO,GAAG,qBAAV;AACD;;AACDV,IAAAA,GAAG,CAACG,GAAJ,CAAQ,gBAAe;AAAED,MAAAA,MAAM,EAAE,OAAV;AAAmBQ,MAAAA;AAAnB,KAAf,CAAR;AACD;AACF,CAnBD","sourcesContent":["import { User } from '../../../model.js';\n\nexport default async (req, res) => {\n  if (req.method !== 'POST') {\n    res.status(405).end(); //do not allow this method\n    return;\n  }\n\n  const { email, password, passwordconfirmation } = req.body;\n\n  try {\n    const user = await User.create({ email, password });\n    res.end(JSON.stringify({ status: 'success', message: 'User added' }));\n  } catch (error) {\n    res.statusCode = 500;\n    let message = 'An error occured';\n    if (error.name === 'SequelizeUniqueConstraintError') {\n      message = 'User already exists';\n    }\n    res.end(JSON.stringify({ status: 'error', message }));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}