{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useStoreActions } from 'easy-peasy';\nexport default (function (props) {\n  var _useState = useState(''),\n      email = _useState[0],\n      setEmail = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(''),\n      passwordconfirmation = _useState3[0],\n      setPasswordconfirmation = _useState3[1];\n\n  var setUser = useStoreActions(function (actions) {\n    return actions.user.setUser;\n  }); // const setHideModal = useStoreActions(actions => actions.modals.setHideModal);\n\n  return __jsx(React.Fragment, null, __jsx(\"h2\", null, \"Sign up\"), __jsx(\"div\", null, __jsx(\"form\", {\n    onSubmit: function _callee(event) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.post('/api/auth/register', {\n                email: email,\n                password: password,\n                passwordconfirmation: passwordconfirmation\n              }));\n\n            case 3:\n              response = _context.sent;\n\n              if (!(response.data.status === 'error')) {\n                _context.next = 7;\n                break;\n              }\n\n              alert(response.data.message);\n              return _context.abrupt(\"return\");\n\n            case 7:\n              setUser(email); // setHideModal();\n\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              alert(_context.t0.response.data.message);\n              return _context.abrupt(\"return\");\n\n            case 14:\n              event.preventDefault();\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 10]]);\n    }\n  }, __jsx(\"input\", {\n    id: \"email\",\n    type: \"email\",\n    placeholder: \"Email address\",\n    onChange: function onChange(event) {\n      return setEmail(event.target.value);\n    }\n  }), __jsx(\"input\", {\n    id: \"password\",\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: function onChange(event) {\n      return setPassword(event.target.value);\n    }\n  }), __jsx(\"input\", {\n    id: \"passwordconfirmation\",\n    type: \"password\",\n    placeholder: \"Enter password again\",\n    onChange: function onChange(event) {\n      return setPasswordconfirmation(event.target.value);\n    }\n  }), __jsx(\"button\", null, \"Sign up\")), __jsx(\"p\", null, \"Already have an account?\", ' ', __jsx(\"a\", {\n    href: \"#\",\n    onClick: function onClick() {\n      return props.showLogin();\n    }\n  }, \"Log in\"))));\n});","map":{"version":3,"sources":["/Users/bennywang/Documents/Projects/gamednd/components/RegistrationModal.js"],"names":["useState","axios","useStoreActions","props","email","setEmail","password","setPassword","passwordconfirmation","setPasswordconfirmation","setUser","actions","user","event","post","response","data","status","alert","message","preventDefault","target","value","showLogin"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,YAAhC;AAEA,gBAAe,UAAAC,KAAK,EAAI;AAAA,kBACIH,QAAQ,CAAC,EAAD,CADZ;AAAA,MACfI,KADe;AAAA,MACRC,QADQ;;AAAA,mBAEUL,QAAQ,CAAC,EAAD,CAFlB;AAAA,MAEfM,QAFe;AAAA,MAELC,WAFK;;AAAA,mBAGkCP,QAAQ,CAAC,EAAD,CAH1C;AAAA,MAGfQ,oBAHe;AAAA,MAGOC,uBAHP;;AAKtB,MAAMC,OAAO,GAAGR,eAAe,CAAC,UAAAS,OAAO;AAAA,WAAIA,OAAO,CAACC,IAAR,CAAaF,OAAjB;AAAA,GAAR,CAA/B,CALsB,CAMtB;;AAEA,SACE,4BACE,4BADF,EAEE,mBACE;AACE,IAAA,QAAQ,EAAE,iBAAMG,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEiBZ,KAAK,CAACa,IAAN,CAAW,oBAAX,EAAiC;AACtDV,gBAAAA,KAAK,EAALA,KADsD;AAEtDE,gBAAAA,QAAQ,EAARA,QAFsD;AAGtDE,gBAAAA,oBAAoB,EAApBA;AAHsD,eAAjC,CAFjB;;AAAA;AAEAO,cAAAA,QAFA;;AAAA,oBAOFA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,OAPvB;AAAA;AAAA;AAAA;;AAQJC,cAAAA,KAAK,CAACH,QAAQ,CAACC,IAAT,CAAcG,OAAf,CAAL;AARI;;AAAA;AAWNT,cAAAA,OAAO,CAACN,KAAD,CAAP,CAXM,CAYN;;AAZM;AAAA;;AAAA;AAAA;AAAA;AAcNc,cAAAA,KAAK,CAAC,YAAMH,QAAN,CAAeC,IAAf,CAAoBG,OAArB,CAAL;AAdM;;AAAA;AAiBRN,cAAAA,KAAK,CAACO,cAAN;;AAjBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADZ,KAoBE;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,WAAW,EAAC,eAHd;AAIE,IAAA,QAAQ,EAAE,kBAAAP,KAAK;AAAA,aAAIR,QAAQ,CAACQ,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAZ;AAAA;AAJjB,IApBF,EA0BE;AACE,IAAA,EAAE,EAAC,UADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,QAAQ,EAAE,kBAAAT,KAAK;AAAA,aAAIN,WAAW,CAACM,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAAf;AAAA;AAJjB,IA1BF,EAgCE;AACE,IAAA,EAAE,EAAC,sBADL;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,sBAHd;AAIE,IAAA,QAAQ,EAAE,kBAAAT,KAAK;AAAA,aAAIJ,uBAAuB,CAACI,KAAK,CAACQ,MAAN,CAAaC,KAAd,CAA3B;AAAA;AAJjB,IAhCF,EAsCE,gCAtCF,CADF,EAyCE,6CAC2B,GAD3B,EAEE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,OAAO,EAAE;AAAA,aAAMnB,KAAK,CAACoB,SAAN,EAAN;AAAA;AAArB,cAFF,CAzCF,CAFF,CADF;AAqDD,CA7DD","sourcesContent":["import { useState } from 'react';\nimport axios from 'axios';\nimport { useStoreActions } from 'easy-peasy';\n\nexport default props => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordconfirmation, setPasswordconfirmation] = useState('');\n\n  const setUser = useStoreActions(actions => actions.user.setUser);\n  // const setHideModal = useStoreActions(actions => actions.modals.setHideModal);\n\n  return (\n    <>\n      <h2>Sign up</h2>\n      <div>\n        <form\n          onSubmit={async event => {\n            try {\n              const response = await axios.post('/api/auth/register', {\n                email,\n                password,\n                passwordconfirmation,\n              });\n              if (response.data.status === 'error') {\n                alert(response.data.message);\n                return;\n              }\n              setUser(email);\n              // setHideModal();\n            } catch (error) {\n              alert(error.response.data.message);\n              return;\n            }\n            event.preventDefault();\n          }}>\n          <input\n            id='email'\n            type='email'\n            placeholder='Email address'\n            onChange={event => setEmail(event.target.value)}\n          />\n          <input\n            id='password'\n            type='password'\n            placeholder='Password'\n            onChange={event => setPassword(event.target.value)}\n          />\n          <input\n            id='passwordconfirmation'\n            type='password'\n            placeholder='Enter password again'\n            onChange={event => setPasswordconfirmation(event.target.value)}\n          />\n          <button>Sign up</button>\n        </form>\n        <p>\n          Already have an account?{' '}\n          <a href='#' onClick={() => props.showLogin()}>\n            Log in\n          </a>\n        </p>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}